{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/hp/awesomeapp/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React,{useState}from\"react\";import styled from\"styled-components\";import NumberSelector from\"../NumberSelector\";import TotalScore from\"../TotalScore\";import RollDice from\"../Rolldice\";import{Button,OutlineButton}from\"../buttonsfold.js/Button\";import Rules from\"./Rules\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const GamePlay=()=>{const[score,setScore]=useState(0);const[selectedNumber,setSelectedNumber]=useState(\"\");const[currentDice,setCurrentDice]=useState(1);const[error,setError]=useState(\"\");const[showRules,setShowRules]=useState();const generateRandomNumber=(min,max)=>{return Math.floor(Math.random()*(max-min)+min);};const roleDice=()=>{if(!selectedNumber){setError(\"You have not selected any number.\");return;}setError(\"\");const randomNumber=generateRandomNumber(1,7);setCurrentDice(randomNumber);if(selectedNumber===randomNumber){setScore(prev=>prev+randomNumber);}else{setScore(prev=>prev-2);}setSelectedNumber(\"\");// Reset selectedNumber\n};const resetScore=()=>{setScore(0);};return/*#__PURE__*/_jsxs(MainContainer,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"top-section\",children:[/*#__PURE__*/_jsx(TotalScore,{score:score}),/*#__PURE__*/_jsx(NumberSelector,{selectedNumber:selectedNumber,setSelectedNumber:setSelectedNumber// Pass setSelectedNumber as a prop\n,error:error,setError:setError})]}),/*#__PURE__*/_jsx(RollDice,{currentDice:currentDice,roleDice:roleDice}),/*#__PURE__*/_jsxs(\"div\",{className:\"btns\",children:[/*#__PURE__*/_jsx(OutlineButton,{onClick:resetScore,children:\"Reset Score\"}),/*#__PURE__*/_jsxs(Button,{onClick:()=>setShowRules(prev=>!prev),children:[showRules?\"Hide\":\"Show\",\" Rules\"]})]}),showRules&&/*#__PURE__*/_jsx(Rules,{})]});};const MainContainer=styled.main(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    padding-top: 70px;\\n    .top-section {\\n        display: flex;\\n        justify-content: space-around;\\n        align-items: end;\\n    }\\n    .btns{\\n        display:flex;\\n        flex-direction:column;\\n        align-items:center;\\n        margin-top:40px;\\n       \\n\\n    }\\n\"])));export default GamePlay;","map":{"version":3,"names":["React","useState","styled","NumberSelector","TotalScore","RollDice","Button","OutlineButton","Rules","jsx","_jsx","jsxs","_jsxs","GamePlay","score","setScore","selectedNumber","setSelectedNumber","currentDice","setCurrentDice","error","setError","showRules","setShowRules","generateRandomNumber","min","max","Math","floor","random","roleDice","randomNumber","prev","resetScore","MainContainer","children","className","onClick","main","_templateObject","_taggedTemplateLiteral"],"sources":["C:/Users/hp/awesomeapp/src/components/gameplay.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NumberSelector from \"../NumberSelector\";\r\nimport TotalScore from \"../TotalScore\";\r\nimport RollDice from \"../Rolldice\";\r\nimport { Button, OutlineButton } from \"../buttonsfold.js/Button\";\r\nimport Rules from \"./Rules\";\r\n\r\nconst GamePlay = () => {\r\n    const [score, setScore] = useState(0);\r\n    const [selectedNumber, setSelectedNumber] = useState(\"\");\r\n    const [currentDice, setCurrentDice] = useState(1);\r\n    const [error, setError] = useState(\"\");\r\n    const[showRules,setShowRules]=useState();\r\n\r\n    const generateRandomNumber = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    };\r\n\r\n    const roleDice = () => {\r\n        if (!selectedNumber) {\r\n            setError(\"You have not selected any number.\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n\r\n        const randomNumber = generateRandomNumber(1, 7);\r\n        setCurrentDice(randomNumber);\r\n\r\n        if (selectedNumber === randomNumber) {\r\n            setScore(prev => prev + randomNumber);\r\n        } else {\r\n            setScore(prev => prev - 2);\r\n        }\r\n\r\n        setSelectedNumber(\"\"); // Reset selectedNumber\r\n    };\r\n    const  resetScore=()=>{\r\n        setScore(0);\r\n    }\r\n\r\n    return (\r\n        <MainContainer>\r\n            <div className=\"top-section\">\r\n                <TotalScore score={score} />\r\n                <NumberSelector\r\n                    selectedNumber={selectedNumber}\r\n                    setSelectedNumber={setSelectedNumber} // Pass setSelectedNumber as a prop\r\n                    error={error}\r\n                    setError={setError}\r\n                />\r\n            </div>\r\n            <RollDice currentDice={currentDice} roleDice={roleDice} />\r\n            <div className=\"btns\">\r\n                <OutlineButton onClick={resetScore}>Reset Score</OutlineButton>\r\n                <Button\r\n                onClick={()=>setShowRules((prev)=>!prev)}>{\r\n                    showRules ? \"Hide\":\"Show\"} Rules\r\n                    </Button>\r\n            </div>\r\n        {showRules &&<Rules/>}\r\n        </MainContainer>\r\n    );\r\n};\r\n\r\nconst MainContainer = styled.main`\r\n    padding-top: 70px;\r\n    .top-section {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: end;\r\n    }\r\n    .btns{\r\n        display:flex;\r\n        flex-direction:column;\r\n        align-items:center;\r\n        margin-top:40px;\r\n       \r\n\r\n    }\r\n`;\r\n\r\nexport default GamePlay;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}